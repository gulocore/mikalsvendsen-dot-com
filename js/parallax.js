(()=>{console.log("\u{1F3A8} Loading ENHANCED parallax implementation bundle (CSS transform engine)...");var c={layers:new Map,async detectCapabilities(){try{let s=document.createElement("div");if(s.style.transform="translate3d(0,0,0)",!(s.style.transform!==""))return{canUseCSS:!1,maxImageSize:0};let e=/Android|iPhone|iPad|iPod|Mobile/i.test(navigator.userAgent),t=window.screen.width*window.screen.height,o=navigator.deviceMemory||(e?2:8),i=window.devicePixelRatio||1,n;o<2||t<5e5||o<4||e?n=1024:n=2048;let l=window.matchMedia("(prefers-reduced-motion: reduce)").matches,r=CSS.supports("transform","translate3d(0,0,0)");return console.log(`\u{1F3A8} Enhanced CSS capabilities: 3D=${r}, Max=${n}px, Mobile=${e}`),{canUseCSS:!0,canUse3D:r,maxImageSize:n,isMobile:e,estimatedMemory:o,pixelRatio:i,preferReducedMotion:l}}catch(s){return console.warn("\u{1F3A8} CSS capability check failed:",s),{canUseCSS:!1,maxImageSize:0}}},async loadImage(s,a){let t=(s.qualities||[{name:"default",suffix:""}]).sort((o,i)=>{let n=this.getQualitySize(o),l=this.getQualitySize(i);return n-l});for(let o of t)if(!(this.getQualitySize(o)>a.maxImageSize))try{let i=this.getImagePath(s,o);return await this.preloadImage(i),console.log(`\u2705 Loaded ${o.name||"default"} quality for ${s.name}`),i}catch(i){console.warn(`\u26A0\uFE0F Failed to load ${o.name||"default"} quality:`,i)}throw new Error(`All image qualities failed for layer ${s.name}`)},getQualitySize(s){return s.suffix?.includes("2k")?2048:s.suffix?.includes("1k")?1024:s.suffix?.includes("4k")?4096:1024},getImagePath(s,a){let e=s.format||"jpg",t=a.suffix||"";return`${s.basePath}${t}.${e}`},preloadImage(s){return new Promise((a,e)=>{let t=new Image;t.onload=()=>a(t),t.onerror=()=>e(new Error(`Failed to load: ${s}`)),t.src=s})},createCSSLayer(s,a,e){let t=document.createElement("div");return t.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            pointer-events: none;
            z-index: ${s.zIndex||0};
            opacity: ${s.opacity||1};
            background-image: url('${a}');
            background-repeat: ${s.repeat||"repeat-x"};
            background-size: auto 100%;
            background-position: 0 0;
            will-change: background-position;
            transform: translate3d(0, 0, 0);
            backface-visibility: hidden;
        `,t.className=`parallax-css-layer parallax-layer-${s.name}`,e.preferReducedMotion&&(t.style.backgroundPosition="0 0"),t},enhanceAlpineComponent(s){return{...s,async initializeLayers(){if(!this.config?.layers?.length){console.log(`\u{1F3A8} [${this.componentId}] No layers to initialize`);return}console.log(`\u{1F3A8} [${this.componentId}] Initializing ${this.config.layers.length} layers with CSS transform engine...`),this.isActive=!0;try{let a=await c.detectCapabilities();if(this.capabilities=a,!a.canUseCSS){this.showFallback();return}let e=this.config.layers.map(i=>this.createLayerWithCSS(i,a).catch(n=>(console.warn(`\u26A0\uFE0F [${this.componentId}] Layer ${i.name} failed:`,n),null))),o=(await Promise.all(e)).filter(Boolean).length;if(o===0)throw new Error("No layers loaded successfully");this.isLoaded=!0,document.body.classList.add("parallax-active"),console.log(`\u2705 [${this.componentId}] CSS parallax loaded: ${o}/${this.config.layers.length} layers`)}catch(a){this.hasError=!0,this.errorMessage=a.message,console.error(`\u274C [${this.componentId}] CSS parallax initialization failed:`,a),this.showFallback()}},async createLayerWithCSS(a,e){console.log(`\u{1F3A8} [${this.componentId}] Creating CSS layer: ${a.name}`);let t=document.querySelector(`.parallax-layer-${a.name}`);t&&t.remove();let o=await c.loadImage(a,e),i=c.createCSSLayer(a,o,e);this.$el.appendChild(i);let n,l=()=>{n||(n=setTimeout(()=>{this.updateLayerWithCSS(a.name),n=null},16))},r=a.scrollContainer==="window"?window:document.querySelector(a.scrollContainer)||window;r.addEventListener("scroll",l,{passive:!0});let d={config:a,element:i,imagePath:o,scrollListener:l,scrollContainer:r,lastScrollY:0};this.canvases.set(a.name,d),this.layers.push(d);let m=(r===window?window.scrollY:r.scrollTop)*(a.speed||1);return i.style.backgroundPosition=`${-m}px 0`,d},updateLayerWithCSS(a){let e=this.canvases.get(a);if(!e||this.capabilities?.preferReducedMotion)return;let t=e.scrollContainer===window?window.scrollY:e.scrollContainer.scrollTop;if(t!==e.lastScrollY){e.lastScrollY=t;let o=t*(e.config.speed||1);e.element.style.backgroundPosition=`${-o}px 0`}},handleResize(){console.log(`\u{1F3A8} [${this.componentId}] Handling resize with CSS engine`);for(let[a,e]of this.canvases){let o=(e.scrollContainer===window?window.scrollY:e.scrollContainer.scrollTop)*(e.config.speed||1);e.element.style.backgroundPosition=`${-o}px 0`}},cleanup(){console.log(`\u{1F9F9} [${this.componentId}] Cleaning up CSS parallax layers...`),this.resizeHandler&&(window.removeEventListener("resize",this.resizeHandler),this.resizeHandler=null);for(let[e,t]of this.canvases)t.scrollListener&&t.scrollContainer.removeEventListener("scroll",t.scrollListener),t.element?.parentNode&&t.element.parentNode.removeChild(t.element);document.querySelectorAll(".parallax-css-layer").forEach(e=>e.remove()),this.canvases.clear(),this.layers=[],this.isActive=!1,this.isLoaded=!1,this.hasError=!1,document.body.classList.remove("parallax-active"),this.config?.fallbackClass&&document.body.classList.remove(this.config.fallbackClass),document.body.classList.remove("parallax-fallback")}}}};window.ParallaxImplementation=c;console.log("\u2705 ENHANCED CSS parallax implementation loaded - Hardware accelerated, mobile optimized!");var h=c;})();
